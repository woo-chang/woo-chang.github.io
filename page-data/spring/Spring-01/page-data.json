{"componentChunkName":"component---src-templates-blog-post-js","path":"/spring/Spring-01/","result":{"data":{"site":{"siteMetadata":{"title":"한 페이지가 될 수 있게","author":"woo-chang","siteUrl":"https://woo-chang.github.io","comment":{"disqusShortName":"","utterances":"woo-chang/blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"f5147197-7ace-5747-8874-bb2565139012","excerpt":"개요 Spring Security에 대한 개념을 실습을 통해 익히고자 Spring Boot JWT Tutorial 강의를 수강하다 다음과 같은 에러가 발생했습니다. 해당 프로젝트가 저장되어 있는 폴더경로는  명칭으로 변경 강의의 질문 내용에도 해당 에러 관련 문의가 많이 올라와 있었고, 해결방안도 존재했지만 추가적으로 필요한 수정이 발생하여 이 글을 작성하게 되었습니다. 에러 이전 알아야 할 사항 데이터 초기화 Spring…","html":"<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<p>Spring Security에 대한 개념을 실습을 통해 익히고자 <a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-jwt/dashboard\">Spring Boot JWT Tutorial</a> 강의를 수강하다 다음과 같은 에러가 발생했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">org.springframework.beans.factory.BeanCreationException:\nError creating bean with name <span class=\"token string\">'dataSourceScriptDatabaseInitializer'</span> defined <span class=\"token keyword\">in</span> class path resource <span class=\"token punctuation\">[</span>org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class<span class=\"token punctuation\">]</span>:\nInvocation of init method failed<span class=\"token punctuation\">;</span>\nnested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException:\nFailed to execute SQL script statement <span class=\"token comment\">#1 of URL [file:/폴더경로/jwt-tutorial/out/production/resources/data.sql]:</span>\nINSERT INTO <span class=\"token environment constant\">USER</span> <span class=\"token punctuation\">(</span>USER_ID, USERNAME, PASSWORD, NICKNAME, ACTIVATED<span class=\"token punctuation\">)</span> VALUES <span class=\"token punctuation\">(</span><span class=\"token number\">1</span>, <span class=\"token string\">'admin'</span>, <span class=\"token string\">'$2a$08$lDnHPz7eUkSi6ao14Twuau08mzhWrL4kyZGGU5xfiGALO/Vxd5DOi'</span>, <span class=\"token string\">'admin'</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nnested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException:\nSyntax error <span class=\"token keyword\">in</span> SQL statement <span class=\"token string\">\"INSERT INTO [*]USER (USER_ID, USERNAME, PASSWORD, NICKNAME, ACTIVATED) VALUES (1, 'admin', '<span class=\"token variable\">$2a</span><span class=\"token variable\">$08</span><span class=\"token variable\">$lDnHPz7eUkSi6ao14Twuau08mzhWrL4kyZGGU5xfiGALO</span>/Vxd5DOi', 'admin', 1)\"</span><span class=\"token punctuation\">;</span>\nexpected <span class=\"token string\">\"identifier\"</span><span class=\"token punctuation\">;</span>\nSQL statement:\nINSERT INTO <span class=\"token environment constant\">USER</span> <span class=\"token punctuation\">(</span>USER_ID, USERNAME, PASSWORD, NICKNAME, ACTIVATED<span class=\"token punctuation\">)</span> VALUES <span class=\"token punctuation\">(</span><span class=\"token number\">1</span>, <span class=\"token string\">'admin'</span>, <span class=\"token string\">'$2a$08$lDnHPz7eUkSi6ao14Twuau08mzhWrL4kyZGGU5xfiGALO/Vxd5DOi'</span>, <span class=\"token string\">'admin'</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">42001</span>-212<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>해당 프로젝트가 저장되어 있는 폴더경로는 <code class=\"language-text\">폴더경로</code> 명칭으로 변경</li>\n</ul>\n<p>강의의 질문 내용에도 해당 에러 관련 문의가 많이 올라와 있었고, 해결방안도 존재했지만 추가적으로 필요한 수정이 발생하여 이 글을 작성하게 되었습니다.</p>\n<h2 id=\"에러-이전-알아야-할-사항\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EC%9D%B4%EC%A0%84-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0-%EC%82%AC%ED%95%AD\" aria-label=\"에러 이전 알아야 할 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 이전 알아야 할 사항</h2>\n<h3 id=\"데이터-초기화\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B4%88%EA%B8%B0%ED%99%94\" aria-label=\"데이터 초기화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 초기화</h3>\n<p>Spring에서는 데이터 초기화 전략이 존재하는데 그 중 하나가 <code class=\"language-text\">data.sql</code>을 사용하는 것입니다. ClassPath 루트에 해당 파일이 존재하면 서버 시작시 해당 파일의 SQL이 자동으로 실행되게 됩니다.</p>\n<p>별도로 <code class=\"language-text\">schema.sql</code> 파일도 존재하는데 데이터를 정의하기 위한 DDL은 schema.sql 파일에 명시해두고 데이터를 조작하기 위한 DDL은 data.sql에 명시합니다.</p>\n<h3 id=\"h2-database\" style=\"position:relative;\"><a href=\"#h2-database\" aria-label=\"h2 database permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H2 Database</h3>\n<p>해당 프로젝트에서 사용하게 되는 DB는 <code class=\"language-text\">H2 Database</code>로 자바 기반 오픈소스 관계형 데이터베이스 관리시스템입니다.</p>\n<h4 id=\"특징\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A7%95\" aria-label=\"특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특징</h4>\n<ul>\n<li>인메모리 DB 기능을 지원</li>\n<li>브라우저 기반 콘솔 모드 사용 가능</li>\n<li>별도의 설치과정이 존재하지 않고 용량도 저용량</li>\n<li>DB 자체가 매우 가볍고 빠르며 JDBC API도 지원</li>\n<li>표준 SQL을 지원</li>\n</ul>\n<p>위와 같은 특징을 가지고 있기에 개발 단계 테스트 DB로 많이 사용됩니다.</p>\n<h2 id=\"에러\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC\" aria-label=\"에러 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러</h2>\n<p>에러가 발생한 원인은 다음과 같습니다.</p>\n<blockquote>\n<p><strong>Hibernate and data.sql</strong>\nBy default, data.sql scripts are now run before Hibernate is initialized. This aligns the behavior of basic script-based initialization with that of Flyway and Liquibase. If you want to use data.sql to populate a schema created by Hibernate, set spring.jpa.defer-datasource-initialization to true. While mixing database initialization technologies is not recommended, this will also allow you to use a schema.sql script to build upon a Hibernate-created schema before it’s populated via data.sql.</p>\n</blockquote>\n<p>Spring Boot 2.5버전부터는 데이터베이스 마이그레이션 도구인 <code class=\"language-text\">Flyway</code>와 데이터베이스 스키마 추적 라이브러리인 <code class=\"language-text\">Liquibase</code>와의 동기화를 위해 Hibernate가 초기화되기 이전에 data.sql 스크립트가 실행된다고 합니다.</p>\n<p>따라서 Hibernate 초기화 이후 data.sql을 실행시키기 위해서는 application.properties(yml) 파일에 <strong>spring.jpa.defer-datasource-initialization</strong>를 <code class=\"language-text\">true</code>로 설정해줘야만 올바른 동작을 수행할 수 있습니다.</p>\n<h4 id=\"springjpadefer-datasource-initialization\" style=\"position:relative;\"><a href=\"#springjpadefer-datasource-initialization\" aria-label=\"springjpadefer datasource initialization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>spring.jpa.defer-datasource-initialization</h4>\n<blockquote>\n<p>Script-based DataSource initialization is performed, by default, before any JPA EntityManagerFactory beans are created. schema.sql can be used to create the schema for JPA-managed entities and data.sql can be used to populate it. While we do not recommend using multiple data source initialization technologies, if you want script-based DataSource initialization to be able to build upon the schema creation performed by Hibernate, set spring.jpa.defer-datasource-initialization to true. This will defer data source initialization until after any EntityManagerFactory beans have been created and initialized. schema.sql can then be used to make additions to any schema creation performed by Hibernate and data.sql can be used to populate it.</p>\n</blockquote>\n<p>스프링 공식 사이트에서도 다음과 같이 설명하고 있습니다.</p>\n<p>스크립트 기반 데이터 초기화는 <strong>JPA EntityManagerFactory Bean</strong>이 생성되기 이전에 수행됩니다.</p>\n<p>데이터 초기화 기술을 사용하는 것을 권장하지는 않지만 데이터 초기화를 수행하기 위해서는 해당 값을 <code class=\"language-text\">true</code>로 설정해줘야 합니다.</p>\n<p>이를 통해 EntityManagerFactory Bean이 생성되고 초기화 될 때까지 데이터 초기화를 지연시킬 수 있습니다.</p>\n<h2 id=\"해결\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0\" aria-label=\"해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결?</h2>\n<p><img src=\"https://velog.velcdn.com/images/woo-chang/post/a8273e46-62c9-4115-a455-795b6f819a71/image.png\"></p>\n<p>요구사항에 맞게 해당 설정을 추가해주었습니다.</p>\n<p>그럼에도 불구하고 다음과 같은 에러를 확인할 수 있었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">org.springframework.beans.factory.BeanCreationException:\nError creating bean with name <span class=\"token string\">'dataSourceScriptDatabaseInitializer'</span> defined <span class=\"token keyword\">in</span> class path resource\nCaused by: org.h2.jdbc.JdbcSQLSyntaxErrorException:\nSyntax error <span class=\"token keyword\">in</span> SQL statement <span class=\"token string\">\"INSERT INTO [*]USER (USER_ID, USERNAME, PASSWORD, NICKNAME, ACTIVATED) VALUES (1, 'admin', '<span class=\"token variable\">$2a</span><span class=\"token variable\">$08</span><span class=\"token variable\">$lDnHPz7eUkSi6ao14Twuau08mzhWrL4kyZGGU5xfiGALO</span>/Vxd5DOi', 'admin', 1)\"</span><span class=\"token punctuation\">;</span> expected <span class=\"token string\">\"identifier\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>SQL문 실행중 문법적인 에러가 발생하였고 테이블 이름인 <code class=\"language-text\">USER</code>가 SQL의 키워드임을 알게 되었습니다.</p>\n<p>따라서 <code class=\"language-text\">USERS</code>로 테이블 이름을 변경하고 매핑되는 Entity의 테이블 이름도 <strong>users</strong>로 지정하니 아래와 같이 정상적으로 쿼리문이 실행되는 것을 확인할 수 있었습니다.</p>\n<p><img src=\"https://velog.velcdn.com/images/woo-chang/post/de8c9ad9-df03-4ff2-b1a2-f24d90ec062a/image.png\"></p>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>환경 설정 또한 프로젝트 진행의 일부분이기에 변화에 알맞게 적용할 수 있도록 많은 시행착오가 필요할 것 같습니다.</p>\n<p>또한 다수가 진행하는 프로젝트에서는 버전 관리 또한 성공적인 프로젝트를 위한 준비 과정이라는 생각이 들었습니다.</p>","frontmatter":{"title":"스프링 알아보기","date":"May 13, 2022"}}},"pageContext":{"slug":"/spring/Spring-01/","previous":null,"next":null}}}