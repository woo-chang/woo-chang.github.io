{"componentChunkName":"component---src-templates-blog-post-js","path":"/spring/Spring-01 copy/","result":{"data":{"site":{"siteMetadata":{"title":"한 페이지가 될 수 있게","author":"woo-chang","siteUrl":"https://woo-chang.github.io","comment":{"disqusShortName":"","utterances":"woo-chang/blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"3cda73f5-3c3d-5de1-a469-0446b6b574ae","excerpt":"…","html":"<blockquote>\n<p><code class=\"language-text\">객체지향의 사실과 오해</code>를 읽고 <strong>주관적인 의견</strong>을 바탕으로 정리한 글입니다.</p>\n</blockquote>\n<p><strong>객체 지향?</strong></p>\n<p>객체 지향이라는 말을 보거나 들었을 때 처음 드는 생각은 <code class=\"language-text\">클래스</code>이다.</p>\n<p>관련 있는 데이터를 한 곳에 모아둔 것, 데이터를 다루기 위한 기능을 정의한 것 이를 객체 지향의 용어로 바꾼다면 <code class=\"language-text\">추상화</code>, <code class=\"language-text\">캡슐화</code>, <code class=\"language-text\">다형성</code>으로 표현 가능하다.</p>\n<p>하지만 서문을 보자마자 객체를 잘못 이해하고 있다는 생각이 들었다.</p>\n<p>작가님이 이 책을 통해 전하고자 하는 내용은 객체의 특징을 얼마나 잘 이해하고 있느냐가 아닌 <strong>객체를 객체답게 바라보고자 하는 것</strong>이다.</p>\n<p>이 책을 읽고 다음의 목표를 천천히 달성해 나가야한다.</p>\n<ol>\n<li>클래스가 아닌 객체를 바라보는 것</li>\n<li>객체를 협력하는 공동체로 바라보는 것</li>\n<li>객체에게 적절한 역할과 책임을 부여하는 것</li>\n<li>앞선 개념을 프로그래밍 언어에 적용하는 것</li>\n</ol>\n<h2 id=\"객체-지향의-배경\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5%EC%9D%98-%EB%B0%B0%EA%B2%BD\" aria-label=\"객체 지향의 배경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 지향의 배경</h2>\n<p>실세계의 정보를 프로그램으로 구현하기 위한 틀이 필요했는데 이것이 바로 객체 지향 프로그램의 시작이다.</p>\n<blockquote>\n<p>객체지향이란 실세계를 직접적이고 직관적으로 모델링할 수 있는 패러다임</p>\n</blockquote>\n<p>하지만 실세계의 정보와 객체간의 유사성은 거리가 멀고 많은 모순이 발생하게 되었다.</p>\n<p>또한 실제 객체 지향 소프트웨어의 목표은 모방이 아니라 <strong>새로운 세계의 창조</strong>에 있다.</p>\n<p>이러한 문제에도 객체 지향 패러다임에 실세계의 모방이 들어가는 이유는 객체 지향의 핵심 사상인 <strong>연결완전성(seamlessness)</strong>을 설명하는데 현실세계의 <strong>협력(collaboration)</strong>이 적합하기 때문이다.</p>\n<h3 id=\"협력을-이루기-위해\" style=\"position:relative;\"><a href=\"#%ED%98%91%EB%A0%A5%EC%9D%84-%EC%9D%B4%EB%A3%A8%EA%B8%B0-%EC%9C%84%ED%95%B4\" aria-label=\"협력을 이루기 위해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>협력을 이루기 위해</h3>\n<p>각각의 객체는 <code class=\"language-text\">역할</code>을 가지고 있으며 단일로 모든 것을 수행할 수 없다.</p>\n<p>이를 위해서는 요청과 응답이라는 <code class=\"language-text\">협력</code>이 자연스럽게 발생하고 요청과 응답을 수행하기 위해 역할에 대한 <code class=\"language-text\">책임</code>을 가져야한다.</p>\n<p>역할에 대한 책임은 다음과 같이 나타날 수 있다.</p>\n<ul>\n<li>동일한 역할을 수행할 수 있다.</li>\n<li>이는 대체 가능함을 의미한다.</li>\n<li>책임의 수행은 자율적으로 선택 가능하다.</li>\n<li>여러 가지 역할을 동시에 수행할 수 있다.</li>\n</ul>\n<h2 id=\"우아한-객체-지향\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EC%95%84%ED%95%9C-%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5\" aria-label=\"우아한 객체 지향 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우아한 객체 지향</h2>\n<blockquote>\n<p>우아한 설계의 핵심은 객체에게 알맞은 책임을 부여하는 것</p>\n</blockquote>\n<p>역할, 책임, 협력도 결국 객체에서 발생하게 되는 것이다.</p>\n<p>따라서 객체지향 패러다임의 중심에는 <strong>객체</strong>가 존재한다.</p>\n<p>가장 기본이 되는 덕목은 다음과 같다.</p>\n<ul>\n<li>\n<p>객체는 자율성을 갖추고 충분히 협력적이여야 한다.</p>\n<ul>\n<li>이러한 객체의 자율성은 외부와 내부를 확실히 구분하게 됨으로 나오게 된다.</li>\n</ul>\n</li>\n<li>\n<p>수신된 메시지는 메서드로 처리된다.</p>\n<ul>\n<li>컴파일 시간에 메서드가 결정되는 절차적 언어와 달리 런타임에 메서드가 결정되는 것은 객체 지향 언어의 핵심 특징 중 하나다.</li>\n<li>메시지와 메서드를 확실히 구분함으로 객체의 자율성을 높일 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"우아한-개발자\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EC%95%84%ED%95%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90\" aria-label=\"우아한 개발자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우아한 개발자</h3>\n<p>코드를 담는 클래스의 관점이 아닌 메시지를 주고 받는 객체의 관점으로 볼 수 있도록 사고의 중심을 전환할 수 있어야 한다.</p>\n<p>클래스는 단지 객체의 협력 관계를 코드로 옮기는 도구일 뿐이다.</p>\n<p><strong>객체 지향의 중심은 객체를 지향하는 것이지 클래스를 지향하는 것이 아니다.</strong></p>","frontmatter":{"title":"스프링 알아보기","date":"May 13, 2022"}}},"pageContext":{"slug":"/spring/Spring-01 copy/","previous":null,"next":{"fields":{"slug":"/spring/Spring-01/"},"frontmatter":{"title":"스프링 알아보기"}}}}}