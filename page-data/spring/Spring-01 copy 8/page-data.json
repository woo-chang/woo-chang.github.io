{"componentChunkName":"component---src-templates-blog-post-js","path":"/spring/Spring-01 copy 8/","result":{"data":{"site":{"siteMetadata":{"title":"한 페이지가 될 수 있게","author":"woo-chang","siteUrl":"https://woo-chang.github.io","comment":{"disqusShortName":"","utterances":"woo-chang/blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"868c7578-eea1-5d45-a650-5d1ab6709ed4","excerpt":"Servlet 서블릿이란 자바 서버 프로그래밍을 하는데 있어 클라이언트의 요청을 받아 알맞은 로직을 처리하여 다시 클라이언트에게 응답을 돌려주는 자바 웹 프로그래밍 기술이다. 서블릿 정리 단점 자바 코드에 HTML을 작성하여 동적으로 코드를 만들 수 있지만, HTML을 작성하기에 불편한 점이 존재 생산성도 떨어지고 한눈에 알아보기도 어려워 비효율적이다. 그러면 반대로 HTML안에 자바코드를 넣는 방법은 어떨까? JSP의 등장! JSP JSP(Java Server Page)는 HTML…","html":"<h2 id=\"servlet\" style=\"position:relative;\"><a href=\"#servlet\" aria-label=\"servlet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Servlet</h2>\n<blockquote>\n<p>서블릿이란 자바 서버 프로그래밍을 하는데 있어 클라이언트의 요청을 받아 알맞은 로직을 처리하여 다시 클라이언트에게 응답을 돌려주는 자바 웹 프로그래밍 기술이다.</p>\n</blockquote>\n<p><a href=\"https://velog.io/@woo-chang/Servlet%EC%84%9C%EB%B8%94%EB%A6%BF%EC%9D%B4%EB%9E%80\">서블릿 정리</a></p>\n<h3 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@WebServlet</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"htmlServlet\"</span><span class=\"token punctuation\">,</span> urlPatterns <span class=\"token operator\">=</span> <span class=\"token string\">\"/response-html\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HtmlServlet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpServlet</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Content-Type : text/html;charset=utf-8</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">setCharacterEncoding</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">PrintWriter</span> writer <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    writer<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;html>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    writer<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;body>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    writer<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;div>서블릿 작성 귀찮아요!&lt;/div>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    writer<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/body>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    writer<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/html>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>자바 코드에 HTML을 작성하여 동적으로 코드를 만들 수 있지만, HTML을 작성하기에 불편한 점이 존재</p>\n<ul>\n<li>생산성도 떨어지고 한눈에 알아보기도 어려워 비효율적이다.</li>\n</ul>\n<p><strong>그러면 반대로 HTML안에 자바코드를 넣는 방법은 어떨까?</strong></p>\n<ul>\n<li>JSP의 등장!</li>\n</ul>\n<h2 id=\"jsp\" style=\"position:relative;\"><a href=\"#jsp\" aria-label=\"jsp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSP</h2>\n<blockquote>\n<p>JSP(Java Server Page)는 HTML과 같이 일반적인 텍스트 파일 구조로 동적 웹 페이지를 생성하는 자바 웹 애플리케이션 도구이다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsp\"><pre class=\"language-jsp\"><code class=\"language-jsp\">&lt;%@ page import=&quot;hello.servlet.domain.member.MemberRepository&quot; %&gt;\n&lt;%@ page import=&quot;hello.servlet.domain.member.Member&quot; %&gt;\n&lt;%@ page import=&quot;java.util.List&quot; %&gt;\n&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;%\n  MemberRepository memberRepository = MemberRepository.getInstance();\n  List&lt;Member&gt; members = memberRepository.findAll();\n%&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;a href=&quot;/index.html&quot;&gt;메인&lt;/a&gt;\n&lt;table&gt;\n  &lt;thead&gt;\n  &lt;th&gt;id&lt;/th&gt;\n  &lt;th&gt;username&lt;/th&gt;\n  &lt;th&gt;age&lt;/th&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n  &lt;%\n    for (Member member : members) {\n      out.write(&quot;    &lt;tr&gt;&quot;);\n      out.write(&quot;        &lt;td&gt;&quot; + member.getId() + &quot;&lt;/td&gt;&quot;);\n      out.write(&quot;        &lt;td&gt;&quot; + member.getUsername() + &quot;&lt;/td&gt;&quot;);\n      out.write(&quot;        &lt;td&gt;&quot; + member.getAge() + &quot;&lt;/td&gt;&quot;);\n      out.write(&quot;    &lt;/tr&gt;&quot;);\n    }\n  %&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre></div>\n<h3 id=\"처리-과정\" style=\"position:relative;\"><a href=\"#%EC%B2%98%EB%A6%AC-%EA%B3%BC%EC%A0%95\" aria-label=\"처리 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>처리 과정</h3>\n<p>JSP는 자바 서블릿 파일로 변환 후 클래스 파일로 해석되어 실행된다.</p>\n<p><img src=\"https://velog.velcdn.com/images/woo-chang/post/352c9ec3-e5fa-4464-b89a-32031560bb4c/image.png\"></p>\n<ol>\n<li>클라이언트가 <code class=\"language-text\">JSP</code>를 요청한다.</li>\n<li>서블릿 컨테이너는 해당 JSP에 대한 <code class=\"language-text\">서블릿</code>이 존재하는지 확인 후 없으면 자바 파일을 생성한다.</li>\n<li>생성된 자바 파일은 클래스 파일로 컴파일된다.</li>\n<li>존재하는 로직을 처리 후 <code class=\"language-text\">HTML</code> 형태로 구성하여 클라이언트에게 전송한다.</li>\n</ol>\n<p><img src=\"https://velog.velcdn.com/images/woo-chang/post/c0b0a83f-001e-4a5b-bf2b-e4ecae1435d5/image.png\"></p>\n<p>응답 받은 페이지 소스를 확인해보면 로직이 처리된 후 HTML 형태로 온 것을 확인할 수 있다.</p>\n<h3 id=\"특징\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A7%95\" aria-label=\"특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특징</h3>\n<ul>\n<li>자바 코드에 HTML을 작성하는 서블릿과 달리 HTML 코드안에 자바 코드를 넣는다.</li>\n<li>클래스 파일로 해석되어 실행되기에 트래픽 처리도 가능하다.</li>\n<li>자바의 기능을 사용할 수 있기에 활용 범주가 넓다.</li>\n<li>자바 컴포넌트인 Java Beans를 활용할 수 있다.</li>\n</ul>\n<h3 id=\"단점-1\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90-1\" aria-label=\"단점 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h3>\n<ul>\n<li>도구로 모듈을 설치해서 사용해야 한다.</li>\n<li>성능과 기능면에서 템플릿 엔진에게 밀리면서 사용이 줄어드는 추세이다.</li>\n<li>화면 출력과 비즈니스 로직을 같이 처리하게 되어 파일이 복잡해진다.</li>\n</ul>\n<p><strong>화면과 로직을 분리하면 어떨까?</strong></p>\n<ul>\n<li>MVC 패턴의 등장!</li>\n</ul>\n<h2 id=\"mvc\" style=\"position:relative;\"><a href=\"#mvc\" aria-label=\"mvc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MVC</h2>\n<blockquote>\n<p>각각의 관심사가 다른 <strong>Model, View, Controller</strong>를 분리하여 프로젝트를 디자인하는 디자인 패턴이다.</p>\n</blockquote>\n<p><img src=\"https://velog.velcdn.com/images/woo-chang/post/6cf8b4f4-c3c9-4bce-98d2-f609744c8316/image.png\"></p>\n<h3 id=\"model\" style=\"position:relative;\"><a href=\"#model\" aria-label=\"model permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Model</h3>\n<blockquote>\n<p>정보의 가공을 책임지는 컴포넌트이다.</p>\n</blockquote>\n<p>데이터베이스, 상수, 초기화 값, 변수 등의 데이터를 의미한다.</p>\n<p>비즈니스 로직을 처리한 후 생성되는 데이터나 변경되는 데이터를 전달하거나 참조할 수 있도록 하는 역할을 수행한다.</p>\n<p>Model의 <strong>몇 가지 규칙</strong>이 존재한다.</p>\n<ul>\n<li>사용자가 편집하길 원하는 모든 데이터를 가지고 있어야 한다.</li>\n<li>뷰나 컨트롤러와 같이 관심사가 다른 영역의 정보를 알고 있어서는 안된다.</li>\n<li>변경이 발생하면 변경 통지에 대한 처리를 구현해야한다.</li>\n</ul>\n<h3 id=\"view\" style=\"position:relative;\"><a href=\"#view\" aria-label=\"view permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>View</h3>\n<blockquote>\n<p>최종적으로 클라이언트에게 보여지는 화면(UI)을 의미합니다.</p>\n</blockquote>\n<p>서블릿이나 JSP에서도 최종적으로는 HTML 코드를 클라이언트에게 전달하여 화면을 보여주게 된다.</p>\n<p>Model에게 질의와 참조를 통해 데이터를 전달받고 전달받은 데이터를 화면에 표시하게 된다.</p>\n<p>클라이언트가 화면을 변경하게 되면 변경 정보를 Model에 전달하여 Model 변경이 필요하다.</p>\n<p>View 또한 <strong>몇 가지 규칙</strong>이 존재한다.</p>\n<ul>\n<li>모델의 정보를 별도로 저장해서는 안된다.</li>\n<li>모델이나 컨트롤러와 같이 관심사가 다른 영역의 정보를 알고 있어서는 안된다.</li>\n<li>변경이 발생하면 변경 통지에 대한 처리를 구현해야한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsp\"><pre class=\"language-jsp\"><code class=\"language-jsp\">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot;%&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;a href=&quot;/index.html&quot;&gt;메인&lt;/a&gt;\n&lt;table&gt;\n  &lt;thead&gt;\n  &lt;th&gt;id&lt;/th&gt;\n  &lt;th&gt;username&lt;/th&gt;\n  &lt;th&gt;age&lt;/th&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n  &lt;c:forEach var=&quot;item&quot; items=&quot;${members}&quot;&gt;\n    &lt;tr&gt;\n      &lt;td&gt;${item.id}&lt;/td&gt;\n      &lt;td&gt;${item.username}&lt;/td&gt;\n      &lt;td&gt;${item.age}&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/c:forEach&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre></div>\n<p>전달받은 모델 데이터를 활용하여 화면에 출력하는 코드이다.</p>\n<p>자바서버 페이지 표준 태그 라이브러리인 <strong>JSTL(Java Server Page Standard Tag Library)</strong>를 이용하여 효과적인 코드 작성이 가능하다.</p>\n<h3 id=\"controller\" style=\"position:relative;\"><a href=\"#controller\" aria-label=\"controller permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Controller</h3>\n<blockquote>\n<p>클라이언트의 요청을 적절한 Model과 연결시켜주고 Model과 View를 이어주는 역할을 수행한다.</p>\n</blockquote>\n<p>Model과 View는 서로를 모르기에 중간에서 소통할 수 있게 도와주는 역할이 필요한데 이를 Controller가 수행한다.</p>\n<p>Controller의 몇 가지 규칙은 다음과 같다.</p>\n<ul>\n<li>모델이나 뷰에 대해서 알고 있어야 한다.</li>\n<li>모델이나 뷰의 변경을 모니터링 해야한다.</li>\n</ul>\n<p><img src=\"https://velog.velcdn.com/images/woo-chang/post/41aae0b5-8944-49a4-b43e-246bf422551c/image.png\"></p>\n<p><code class=\"language-text\">HttpServletRequest</code>에는 <code class=\"language-text\">attribute</code>라는 간단한 Model이 존재한다.</p>\n<p>Controller에서는 attribute에 View가 참조하길 원하는 데이터를 담아서 클라이언트 요청에 알맞은 JSP로 전송한다.</p>\n<p><code class=\"language-text\">forward</code>는 서버 내부적으로 동작하는데 클라이언트가 URL 변화를 감지할 수 있는 <code class=\"language-text\">redirect</code>와 달리 클라이언트는 호출을 인지하지 못한다.</p>\n<h3 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h3>\n<p>가장 큰 장점은 <strong>유지보수의 편의성</strong>에 있다.</p>\n<p>관심사에 따라 영역을 분리했기에 변화하고자 하는 관심사에만 집중할 수 있고 다른 관심사에 크게 의존적이지 않기에 코드 수정 비용 또한 적다.</p>\n<p>또한 영역의 분리로 인해 독립적으로 개발 진행이 가능하여 개발의 효율성도 증가한다.</p>\n<p>부가적으로 코드의 가독성 향상과 코드의 재사용성이 증가한다.</p>\n<h3 id=\"한계\" style=\"position:relative;\"><a href=\"#%ED%95%9C%EA%B3%84\" aria-label=\"한계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한계</h3>\n<p>관심사를 적절히 나누기 위해 설계 단계에서 <strong>많은 비용</strong>이 발생한다.</p>\n<p>Controller에 의한 부분적인 의존이 발생하기에 Controller의 역할이 과도하게 커질 수 있다는 문제도 존재한다.</p>","frontmatter":{"title":"스프링 알아보기","date":"May 13, 2022"}}},"pageContext":{"slug":"/spring/Spring-01 copy 8/","previous":{"fields":{"slug":"/spring/Spring-01 copy 9/"},"frontmatter":{"title":"스프링 알아보기"}},"next":{"fields":{"slug":"/spring/Spring-01 copy/"},"frontmatter":{"title":"스프링 알아보기"}}}}}